@using ServiceStack
@model TickerViewModel

@{
    ViewData["Title"] = "Ticker";

    string array = Model.GraphData.DhArray;
    string tradeArray = Model.GraphData.TradeData;
    
}
<script type="text/javascript">
    google.charts.load('current', { packages: ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);
    google.charts.setOnLoadCallback(drawTradeDataChart);

    function drawChart() {
        // Define the chart to be drawn.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Date');
        data.addColumn('number', 'DayHigh');
        data.addColumn('number', 'DayLow');
        data.addRows(@Html.Raw(array));

        // Instantiate and draw the chart.
        var chart = new google.visualization.ColumnChart(document.getElementById('DayHigh'));

        var options = {
            colors: ['green', 'red']
        };
                       
        chart.draw(data, options);
    }
    
    function drawTradeDataChart()
    {
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Date');
        data.addColumn('number', 'Cost');
        data.addColumn('number', 'Profit');
        data.addRows(@Html.Raw(tradeArray));
        
        // Instantiate and draw the chart.
        var chart = new google.visualization.LineChart(document.getElementById('TradeData'));

        var options = {
            legend: { position: 'right' },
            colors: ['red', 'green'],
            curveType: 'function'
        };

        chart.draw(data, options);
    }
</script>

<h2>@ViewData["Title"]</h2>

@if(Model.GraphData.ErrorMessage.IsNullOrEmpty())
{

@using (Html.BeginForm("GetTickerData", "Graph", FormMethod.Get))
{
    <div>@Html.DropDownList("tickerPickList", Model.TickerList)</div>
    <br />
    <div>@Html.DropDownList("daysInTrade", Model.DaysInTradeList)</div>
    <br />
        <div>
            @Html.DropDownList("percent", Model.PercentList)
        </div>
        <br />
    <div><input type="submit" value="Submit" /></div>
}

<div>
    <table>
        <tr><td>Name</td><td>@Model.GraphData.Name</td></tr>
        <tr><td>Symbol</td><td>@Model.GraphData.Symbol</td></tr>
        <tr><td>Average</td><td>@Model.GraphData.Average</td></tr>
        <tr><td># Days Above Avg</td><td>@Model.GraphData.DaysAboveAvg</td></tr>
        <tr><td>Days Above Avg</td><td>@Model.GraphData.PercentDaysAboveAvg%</td></tr>
        <tr><td># Days High Above Open</td><td>@Model.GraphData.DaysHighAboveOpen</td></tr>
        <tr><td>Days High Above Open</td><td>@Model.GraphData.PercentHighAboveOpen%</td></tr>
        <tr><td># Days Close Above Open</td><td>@Model.GraphData.DaysCloseAboveOpen</td></tr>
        <tr><td>Days Close Above Open</td><td>@Model.GraphData.PercentDaysCloseAboveOpen%</td></tr>
        <tr><td># Records</td><td>@Model.GraphData.Records</td></tr>
        <tr><td>Standard Deviation</td><td>@Model.GraphData.StdDev</td></tr>
        <tr><td>Last Close</td><td>@Model.GraphData.LastClose</td></tr>
        <tr><td>Avg. Volume</td><td>@Model.GraphData.AvgVolume</td></tr>
    </table>
</div>
    <div>
        <div id="DayHigh"></div>
    </div>
    <div>
        <div id="TradeData"></div>
    </div>
    

}
else
{
    <div style="color: red;">@Model.GraphData.ErrorMessage</div>
}